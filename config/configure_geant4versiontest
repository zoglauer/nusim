#!/bin/bash

# Allowed versions
Geant4VersionMin=91
Geant4VersionMax=92


ShowSuccess=1;

case $1 in
-s) 
    ShowSuccess=0;;
esac

# If we don't have Geant4, we do not do a version check, since Geant4 is not required for MEGAlib to run
if (`test ! -f $G4INSTALL/source/global/management/include/G4Version.hh`); then
    exit 0;
fi

# Check for version of Geant4
rv=`grep -r "\#define G4VERSION_NUMBER" $G4INSTALL/source/global/management/include/G4Version.hh`; 
version=`echo $rv | awk -F" " '{ print $3 }'`;
Geant4Version=`echo $((${version} / 10)) | awk -F"." '{ print $1 }'`

Geant4VersionMinString="${Geant4VersionMin:(-2):1}.${Geant4VersionMin:(-1):2}"
Geant4VersionMaxString="${Geant4VersionMax:(-2):1}.${Geant4VersionMax:(-1):2}"
Geant4VersionString="${Geant4Version:(-2):1}.${Geant4Version:(-1):2}"

if ([ ${Geant4Version} -ge ${Geant4VersionMin} ] && [ ${Geant4Version} -le ${Geant4VersionMax} ]);
then
    if [ $ShowSuccess -eq 0 ]; then
        echo "Found Geant4 version: ${Geant4VersionString} (minimum: ${Geant4VersionMinString}, maximum: ${Geant4VersionMaxString})"
    fi
else
    echo ""
    echo "No acceptable Geant4 version found!"
    echo "-> For this version of MEGAlib you require a Geant4 version ${Geant4VersionMinString} up to version ${Geant4VersionMaxString}, but not ${Geant4VersionString}!!"
    if ([ ${Geant4Version} -gt ${Geant4VersionMax} ]);
    then
        echo "You seem to use a Geant4 version which is more current than the ones tested with MEGAlib."
        echo "This Geant4 version might or might not work."
        echo "If you are adventurous open the file ${MEGALIB}/config/configure_geant4versiontest,"
        echo "and set Geant4VersionMax to ${Geant4Version}. Then retry configuring MEGAlib."
    fi
    exit 1;
fi;

exit 0
