/*
 * NOrbit.cxx
 *
 * Copyright (C) 2009-2009 by the NuSTAR team.
 * All rights reserved.
 *
 */


////////////////////////////////////////////////////////////////////////////////
//
// NOrbit
//
////////////////////////////////////////////////////////////////////////////////


// Include the header:
#include "NOrbit.h"

// Standard libs:

// ROOT libs:

// MEGAlib libs:

// NuSTAR libs:

////////////////////////////////////////////////////////////////////////////////


#ifdef ___CINT___
ClassImp(NOrbit)
#endif


////////////////////////////////////////////////////////////////////////////////


NOrbit::NOrbit()
{
  // Construct an instance of NOrbit

  Clear();
}


////////////////////////////////////////////////////////////////////////////////


NOrbit::~NOrbit()
{
  // Delete this instance of NOrbit
}


////////////////////////////////////////////////////////////////////////////////


void NOrbit::Clear() 
{
  // Reset the photon data to "NotDefined" values (polarization is zero)

  m_Altitude = g_DoubleNotDefined; 
  m_Inclination = g_DoubleNotDefined; 
  m_Latitude = g_DoubleNotDefined; 
  m_Longitude = g_DoubleNotDefined; 

  m_Empty = true;
}


////////////////////////////////////////////////////////////////////////////////


std::ostream& operator<<(std::ostream& os, const NOrbit& Orbit)
{
  os<<"(lat: "<<Orbit.GetLatitude()/deg<<" deg, long: "<<Orbit.GetLongitude()/deg<<" deg, alt: "<<Orbit.GetAltitude()/km<<" km)";
  return os;
}



// NOrbit.cxx: the end...
////////////////////////////////////////////////////////////////////////////////
